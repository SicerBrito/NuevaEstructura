// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistencia;

#nullable disable

namespace Persistencia.Data.Migrations
{
    [DbContext(typeof(TablaContext))]
    partial class TablaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Dominio.Entities.Marca", b =>
                {
                    b.Property<int>("IdMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdMarcas")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionMarca")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("DescripcionMarca");

                    b.HasKey("IdMarca");

                    b.ToTable("Marcas", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Pais", b =>
                {
                    b.Property<int>("IdPais")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdPais")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NombrePais")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("NombrePais");

                    b.HasKey("IdPais");

                    b.ToTable("Paises", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Persona", b =>
                {
                    b.Property<int>("IdPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdMarcas")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApellidoPersona")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar")
                        .HasColumnName("ApellidoPersona");

                    b.Property<int>("EdadPersona")
                        .HasColumnType("int")
                        .HasColumnName("EdadPersona");

                    b.Property<int>("IdProvincia")
                        .HasColumnType("int")
                        .HasColumnName("Provincia_Id");

                    b.Property<int>("IdTipoPersona")
                        .HasColumnType("int")
                        .HasColumnName("TipoPersona_Id");

                    b.Property<string>("NombrePersona")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar")
                        .HasColumnName("NombrePersona");

                    b.HasKey("IdPersona");

                    b.HasIndex("IdProvincia");

                    b.HasIndex("IdTipoPersona");

                    b.ToTable("Personas", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.PersonaProducto", b =>
                {
                    b.Property<int>("IdPersonaProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdPersona")
                        .HasColumnType("int")
                        .HasColumnName("Persona_Id");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("Producto_Id");

                    b.HasKey("IdPersonaProducto");

                    b.HasIndex("IdPersona");

                    b.HasIndex("IdProducto");

                    b.ToTable("PersonaProducto", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdProducto")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("DctoProducto")
                        .HasColumnType("double")
                        .HasColumnName("DctoProducto");

                    b.Property<string>("DescripcionProducto")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("DescripcionProducto");

                    b.Property<int>("IdMarca")
                        .HasColumnType("int")
                        .HasColumnName("Marca_Id");

                    b.Property<double>("PrecioProducto")
                        .HasColumnType("double")
                        .HasColumnName("PrecioProducto");

                    b.Property<string>("RefProducto")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar")
                        .HasColumnName("RefProducto");

                    b.HasKey("IdProducto");

                    b.HasIndex("IdMarca");

                    b.ToTable("Productos", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Provincia", b =>
                {
                    b.Property<int>("IdProvincia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdProvincia")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdRegion")
                        .HasColumnType("int")
                        .HasColumnName("Region_Id");

                    b.Property<string>("NombreProvincia")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar")
                        .HasColumnName("NombreProvincia");

                    b.HasKey("IdProvincia");

                    b.HasIndex("IdRegion");

                    b.ToTable("Provincias", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Region", b =>
                {
                    b.Property<int>("IdRegion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdRegion")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdPais")
                        .HasColumnType("int")
                        .HasColumnName("Pais_Id");

                    b.Property<string>("NombreRegion")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar")
                        .HasColumnName("NombreRegion");

                    b.HasKey("IdRegion");

                    b.HasIndex("IdPais");

                    b.ToTable("Regiones", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.TipoPersona", b =>
                {
                    b.Property<int>("IdTipoPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdTipoPersona")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionTipoPersona")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("DescripcionTipoPersona");

                    b.HasKey("IdTipoPersona");

                    b.ToTable("TipoDePersonas", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Persona", b =>
                {
                    b.HasOne("Dominio.Entities.Provincia", "Provincias")
                        .WithMany("Personas")
                        .HasForeignKey("IdProvincia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.TipoPersona", "TipoPersonas")
                        .WithMany("Personas")
                        .HasForeignKey("IdTipoPersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provincias");

                    b.Navigation("TipoPersonas");
                });

            modelBuilder.Entity("Dominio.Entities.PersonaProducto", b =>
                {
                    b.HasOne("Dominio.Entities.Persona", "Personas")
                        .WithMany("PersonaProductos")
                        .HasForeignKey("IdPersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Producto", "Productos")
                        .WithMany("PersonaProductos")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personas");

                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Dominio.Entities.Producto", b =>
                {
                    b.HasOne("Dominio.Entities.Marca", "Marcas")
                        .WithMany("Productos")
                        .HasForeignKey("IdMarca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marcas");
                });

            modelBuilder.Entity("Dominio.Entities.Provincia", b =>
                {
                    b.HasOne("Dominio.Entities.Region", "Regions")
                        .WithMany("Provincias")
                        .HasForeignKey("IdRegion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Regions");
                });

            modelBuilder.Entity("Dominio.Entities.Region", b =>
                {
                    b.HasOne("Dominio.Entities.Pais", "Paises")
                        .WithMany("Regiones")
                        .HasForeignKey("IdPais")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paises");
                });

            modelBuilder.Entity("Dominio.Entities.Marca", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Dominio.Entities.Pais", b =>
                {
                    b.Navigation("Regiones");
                });

            modelBuilder.Entity("Dominio.Entities.Persona", b =>
                {
                    b.Navigation("PersonaProductos");
                });

            modelBuilder.Entity("Dominio.Entities.Producto", b =>
                {
                    b.Navigation("PersonaProductos");
                });

            modelBuilder.Entity("Dominio.Entities.Provincia", b =>
                {
                    b.Navigation("Personas");
                });

            modelBuilder.Entity("Dominio.Entities.Region", b =>
                {
                    b.Navigation("Provincias");
                });

            modelBuilder.Entity("Dominio.Entities.TipoPersona", b =>
                {
                    b.Navigation("Personas");
                });
#pragma warning restore 612, 618
        }
    }
}
